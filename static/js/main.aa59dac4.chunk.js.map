{"version":3,"sources":["App.styled.js","FormatSelector.js","api.js","Error.js","Loading.js","victory.js","colours.js","dateTransformer.js","PlaceGraph.js","YearsComparer.js","YearGraph.js","PlacesComparer.js","App.js","serviceWorker.js","index.js"],"names":["FlexBox","styled","div","AppWrapper","Header","process","Logo","img","Body","FormatSelector","handleChange","format","FormControl","component","style","alignItems","paddingTop","RadioGroup","value","onChange","display","flexDirection","FormControlLabel","control","Radio","color","label","paddingRight","cache","api","getSnowDepth","a","fetch","response","json","jsonResponse","Error","Loading","width","textAlign","CircularProgress","margin","months","firstDay","south","north","both","InteractiveLegend","series","monthDisplay","React","events","setEvents","map","_","idx","childName","target","eventKey","String","eventHandlers","onMouseOver","mutation","props","strokeWidth","fillOpacity","onMouseOut","height","containerComponent","labels","y","datum","radius","labelComponent","centerOffset","x","fontSize","grid","stroke","tickLabels","tickValues","tickFormat","day","find","dependentAxis","snow","s","name","data","line","datapoints","dp","fill","orientation","itemsPerRow","symbol","cursor","distinctColours","getRandomColour","replace","Math","random","toString","convertDateToDayOfYear","date","isSouthernHemisphere","momentDate","moment","subtract","year","firstDayOfYear","diff","PlaceGraph","useState","getDefaultSelected","selected","setSelected","handleCheckboxChange","checked","selectedCopy","graphData","index","yearData","flexGrow","filter","minWidth","FormLabel","FormGroup","flexFlow","maxHeight","overflow","alignContent","reverse","selectedYears","YearCheckbox","Checkbox","i","length","YearsComparer","undefined","setData","error","setError","placeIndex","setPlaceIndex","useEffect","then","spencersCreekIndex","findIndex","place","placeData","PlaceSelector","Select","e","MenuItem","YearGraph","allSelected","reduce","persisted","selectedYearsCopy","ItemCheckbox","PlacesComparer","selectedYear","setYear","oneYearData","YearSelector","possibleYears","getYearsWhereAtLeastTwoResortsHaveData","yearsWithAnyData","yearsWithAtLeastTwoResorts","forEach","Object","keys","App","setFormat","src","alt","event","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.aa59dac4.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FlexBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    padding-top: 20px;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\nexport const AppWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const TransparentBox = styled.div`\n    opacity: 0.4;\n    margin: 30px;\n    background-color: white;\n`;\n\nexport const Header = styled.div`\n    background: url(${process.env.PUBLIC_URL + '/mountains.png'}) center 0px; \n    background-repeat: repeat no-repeat;\n    @media (max-width: 600px) {\n        min-height: 150px;\n        background-size: auto 150px;\n    }\n    @media (min-width: 601px) {\n        min-height: 200px;\n        background-size: auto 200px;\n    }\n`;\n\nexport const Logo = styled.img`\n    margin: auto;\n    display: block;\n    padding-top: 20px;\n    @media (max-width: 600px) {\n        height: 70px;\n    }\n    @media (min-width: 601px) {\n        height: 100px;\n    }\n`;\n\nexport const Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 0 10%;\n`;\n","import React from 'react';\nimport { FormControl, FormControlLabel, RadioGroup, Radio } from '@material-ui/core';\n\nexport const FormatSelector = ({ handleChange, format }) => {\n    return <FormControl component=\"fieldset\" style={{ alignItems: 'center', paddingTop: '20px' }} >\n        <RadioGroup value={format} onChange={handleChange}>\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                <FormControlLabel value=\"years\" control={<Radio color='primary' />} label=\"Compare years\" style={{ paddingRight: '20px' }} />\n                <FormControlLabel value=\"resorts\" control={<Radio color='primary' />} label=\"Compare resorts\" />\n            </div>\n        </RadioGroup>\n    </FormControl>\n};","const BASE_URL = process.env.NODE_ENV === 'development' ?\n    'http://localhost:5000' : 'https://ski-be-hgfltltt5a-de.a.run.app'\n\nconst cache = {};\n\nexport const api = {\n    getSnowDepth: async () => {\n        if (cache.getSnowDepth) {\n            return cache.getSnowDepth;\n        } else {\n            const response = await fetch(`${BASE_URL}/api/snowDepth`);\n            const jsonResponse = await response.json();\n            cache.getSnowDepth = jsonResponse;\n            return jsonResponse;\n        }\n    }\n}","import React from 'react';\n\nexport const Error = () => {\n    return <div style={{color: 'red'}}>\n        <h3>Oops, something went wrong. Please try refreshing the page or come back later. Sorry about that</h3>\n    </div>;\n};","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport const Loading = () => {\n    return <div style={{width: '100%', textAlign: 'center'}}>\n                <h3>Loading...</h3>\n        <CircularProgress style={{ margin: '0 auto' }} />\n    </div>;\n};","import * as React from 'react';\nimport { VictoryArea, VictoryChart, VictoryLegend, VictoryAxis, VictoryVoronoiContainer, VictoryTooltip } from 'victory';\n\n\nconst toVictoryData = (line) => {\n    return line.datapoints.map(dp => ({\n        name: line.name,\n        x: dp.x,\n        y: dp.y\n    }));\n};\n\nconst toVictoryLegend = (line) => {\n    return line.color ? {\n        name: line.name,\n        symbol: {\n            fill: line.color\n        }\n    } : { name: line.name };\n};\n\nconst months = [\n    { firstDay: 1, south: \"Jan\", north: \"July\", both: \"Jan/\\nJuly\" },\n    { firstDay: 32, south: \"Feb\", north: \"Aug\", both: \"Feb/\\nAug\" },\n    { firstDay: 60, south: \"Mar\", north: \"Sept\", both: \"Mar/\\nSept\" },\n    { firstDay: 91, south: \"Apr\", north: \"Oct\", both: \"Apr/\\nOct\" },\n    { firstDay: 121, south: \"May\", north: \"Nov\", both: \"May/\\nNov\" },\n    { firstDay: 152, south: \"June\", north: \"Dec\", both: \"June/\\nDec\" },\n    { firstDay: 182, south: \"July\", north: \"Jan\", both: \"July/\\nJan\" },\n    { firstDay: 213, south: \"Aug\", north: \"Feb\", both: \"Aug/\\nFeb\" },\n    { firstDay: 244, south: \"Sept\", north: \"Mar\", both: \"Sept/\\nMar\" },\n    { firstDay: 274, south: \"Oct\", north: \"Apr\", both: \"Oct/\\nApr\" },\n    { firstDay: 305, south: \"Nov\", north: \"May\", both: \"Nov/\\nMay\" },\n    { firstDay: 335, south: \"Dec\", north: \"June\", both: \"Dec/\\nJune\" },\n    { firstDay: 366, south: \"\", north: \"\", both: \"\" },\n];\n\nexport const InteractiveLegend = ({ series, monthDisplay }) => {\n\n    const [events, setEvents] = React.useState([]);\n\n    React.useEffect(() => {\n        setEvents(\n            series.map((_, idx) => {\n                return {\n                    childName: ['legend'],\n                    target: ['data', 'labels'],\n                    eventKey: String(idx),\n                    eventHandlers: {\n                        onMouseOver: () => {\n                            return [\n                                {\n                                    childName: ['area-' + idx],\n                                    target: 'data',\n                                    eventKey: 'all',\n                                    mutation: props => {\n                                        return {\n                                            style: { ...props.style, strokeWidth: 4, fillOpacity: 0.5 }\n                                        };\n                                    }\n                                }\n                            ];\n                        },\n                        onMouseOut: () => {\n                            return [\n                                {\n                                    childName: ['area-' + idx],\n                                    target: 'data',\n                                    eventKey: 'all',\n                                    mutation: () => {\n                                        return null;\n                                    }\n                                }\n                            ];\n                        }\n                    }\n                };\n            })\n        )\n    }, [series]);\n\n    return (\n        <div>\n            <VictoryChart\n                height={200}\n                events={events}\n                containerComponent={\n                    <VictoryVoronoiContainer\n                        labels={({ datum: { y } }) => `${y}cm`}\n                        radius={5}\n                        labelComponent={<VictoryTooltip\n                            centerOffset={{ x: 5 }}\n                            style={{ fontSize: '6px' }}\n                        />}\n                    />\n                }\n            >\n                <VictoryAxis\n                    style={{\n                        grid: { stroke: \"#818e99\", strokeWidth: 0.5 },\n                        tickLabels: { fontSize: 8 },\n                    }}\n                    tickValues={months.map(({ firstDay }) => firstDay)}\n                    tickFormat={(day) => {\n                        const month = months.find(({ firstDay }) => firstDay === day);\n                        return month[monthDisplay];\n                    }}\n                />\n                <VictoryAxis\n                    style={{\n                        grid: { stroke: \"#818e99\", strokeWidth: 0.5 },\n                        tickLabels: { fontSize: 8 },\n                    }}\n                    dependentAxis={true} tickFormat={(snow) => `${snow}cm`}\n\n                />\n                {series.map((s, idx) => {\n                    return (\n                        <VictoryArea\n                            key={'area-' + idx}\n                            name={'area-' + idx}\n                            data={toVictoryData(s)}\n                            style={{\n                                data: {\n                                    fill: s.color,\n                                    fillOpacity: 0.2,\n                                    stroke: s.color,\n                                    strokeWidth: 2\n                                }\n                            }}\n                        />\n                    );\n                })}\n                <VictoryLegend\n                    orientation='horizontal'\n                    itemsPerRow={6}\n                    name={'legend'}\n                    data={series.map((s, idx) => toVictoryLegend(s))}\n                    height={50}\n                    style={{ labels: { fontSize: 8, cursor: 'pointer' } }}\n                />\n            </VictoryChart>\n        </div>\n    );\n}\n\nexport default InteractiveLegend;","// colours from here https://mokole.com/palette.html\n\nexport const distinctColours = [\n    '#556b2f',\n    '#2f4f4f',\n    '#dcdcdc',\n    '#d2691e',\n    '#4682b4',\n    '#3cb371',\n    '#808000',\n    '#708090',\n    '#006400',\n    '#191970',\n    '#7f0000',\n    '#ffb6c1',\n    '#ff69b4',\n    '#7fffd4',\n    '#ff1493',\n    '#87ceeb',\n    '#90ee90',\n    '#dda0dd',\n    '#fa8072',\n    '#f0e68c',\n    '#db7093',\n    '#1e90ff',\n    '#ff00ff',\n    '#da70d6',\n    '#ff6347',\n    '#adff2f',\n    '#8b008b',\n    '#a020f0',\n    '#0000ff',\n    '#9370db',\n    '#f4a460',\n    '#00bfff',\n    '#00ffff',\n    '#dc143c',\n    '#00ff7f',\n    '#00ff00',\n    '#deb887',\n    '#0000cd',\n    '#ffff00',\n    '#ffd700',\n    '#ff8c00',\n    '#ff4500',\n    '#9932cc',\n    '#8fbc8f',\n    '#daa520',\n    '#32cd32',\n    '#00008b',\n    '#20b2aa',\n    '#9acd32',\n];\n\nexport function getRandomColour() {\n    return \"#000000\".replace(/0/g, function () { return (~~(Math.random() * 16)).toString(16); });\n}","import moment from 'moment';\n\nexport function convertDateToDayOfYear(date, isSouthernHemisphere) {\n    let momentDate = moment(date, 'YYYY-MM-DD');\n    if (!isSouthernHemisphere) {\n        momentDate.subtract(6, 'months');\n    }\n    const year = momentDate.year();\n    const firstDayOfYear = moment(year + '-01-01', 'YYYY-MM-DD');\n    return momentDate.diff(firstDayOfYear, 'days');\n}\n","import React from 'react';\nimport InteractiveLegend from './victory';\nimport { FlexBox } from './App.styled';\nimport { Checkbox, FormControlLabel, FormGroup, FormLabel } from '@material-ui/core';\nimport { distinctColours, getRandomColour } from './colours';\nimport { convertDateToDayOfYear } from './dateTransformer';\n\nexport const PlaceGraph = ({ data, isSouthernHemisphere }) => {\n\n    const [selected, setSelected] = React.useState(getDefaultSelected(data));\n\n    const show = (year) => {\n        return selected[year];\n    };\n\n    const handleCheckboxChange = ({ target: { name, checked } }) => {\n        const selectedCopy = { ...selected };\n        selectedCopy[name] = checked;\n        setSelected(selectedCopy);\n    };\n\n    const graphData = data\n        .map(({ year, yearData }, index) => {\n            return {\n                name: year,\n                color: distinctColours[index] || getRandomColour(),\n                datapoints: yearData.map(({ date, snow }) => ({ x: convertDateToDayOfYear(date, isSouthernHemisphere), y: snow }))\n            }\n        });\n\n    const filteredData = () => {\n        return graphData.filter(({ name }) => show(name));\n    };\n\n\n    return <FlexBox>\n        <div style={{ flexGrow: 1 }}>\n            <InteractiveLegend series={filteredData()} monthDisplay={isSouthernHemisphere ? 'south' : 'north'} />\n        </div>\n        {graphData && <div style={{ minWidth: '300px' }}>\n            <FormLabel >Years</FormLabel>\n            <FormGroup label='Years' style={{ display: 'flex', flexFlow: 'column wrap', maxHeight: '680px', overflow: 'auto', alignContent: 'flex-start', width: '300px' }}>\n                {[...graphData].reverse().map(({ name }) => <YearCheckbox year={name} selectedYears={selected} handleCheckboxChange={handleCheckboxChange} key={name} />)}\n            </FormGroup>\n        </div>}\n    </FlexBox>;\n}\n\nconst YearCheckbox = ({ selectedYears, handleCheckboxChange, year }) => {\n    return <FormControlLabel\n        control={<Checkbox\n            checked={selectedYears[year]}\n            onChange={handleCheckboxChange}\n            name={year}\n            style={{ color: 'black' }}\n        />}\n        label={year}\n    />\n}\n\nconst getDefaultSelected = (data) => {\n    const selected = {};\n    for (let i = 1900; i <= data[data.length - 1].year; i++) {\n        selected[i] = false;\n    }\n\n    selected[data[data.length - 1].year] = true;\n    selected[data[data.length - 2].year] = true;\n    return selected;\n};\n","import React, { useEffect } from 'react';\nimport { api } from './api';\nimport { Error } from './Error';\nimport { Loading } from './Loading';\nimport { PlaceGraph } from './PlaceGraph';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\n\nexport const YearsComparer = () => {\n\n    const [data, setData] = React.useState(undefined);\n    const [error, setError] = React.useState(false);\n    const [placeIndex, setPlaceIndex] = React.useState(undefined);\n\n    useEffect(() => {\n        api.getSnowDepth().then(\n            setData,\n            () => setError(true)\n        );\n    }, []);\n\n    useEffect(() => {\n        if (data) {\n            const spencersCreekIndex = data.findIndex(({ place }) => place === 'Spencers Creek')\n            const newIndex = spencersCreekIndex === - 1 ? 0 : spencersCreekIndex\n            setPlaceIndex(newIndex)\n        }\n    }, [data]);\n\n    const { data: placeData, isSouthernHemisphere } = (data && data[placeIndex]) || {};\n\n    return <>\n        {error && <Error />}\n        {data && placeIndex !== undefined ?\n            <>\n                <h2>Snow Depth</h2>\n                <PlaceSelector placeIndex={placeIndex} setPlaceIndex={setPlaceIndex} data={data} />\n                <PlaceGraph data={placeData} isSouthernHemisphere={isSouthernHemisphere} />\n            </>\n            :\n            <Loading />\n        }\n    </>;\n\n};\n\nconst PlaceSelector = ({ placeIndex, setPlaceIndex, data }) => {\n    return <FormControl style={{ width: '300px', paddingTop: '15px 0px 20px' }}>\n        <Select value={placeIndex} onChange={(e) => setPlaceIndex(e.target.value)}>\n            {data.map(({ place }, index) => <MenuItem value={index} key={index}>{place}</MenuItem>)}\n        </Select>\n    </FormControl>\n};","import React from 'react';\nimport InteractiveLegend from './victory';\nimport { FlexBox } from './App.styled';\nimport { Checkbox, FormControlLabel, FormGroup, FormLabel } from '@material-ui/core';\nimport { distinctColours, getRandomColour } from './colours';\nimport { convertDateToDayOfYear } from './dateTransformer';\n\nexport const YearGraph = ({ data }) => {\n\n    const allSelected = data.reduce((persisted, { place }) => ({\n        [place]: true,\n        ...persisted\n    }), {});\n\n    const [selected, setSelected] = React.useState(allSelected);\n\n    const show = (year) => {\n        return selected[year];\n    };\n\n    const handleCheckboxChange = ({ target: { name, checked } }) => {\n        const selectedYearsCopy = { ...selected };\n        selectedYearsCopy[name] = checked;\n        setSelected(selectedYearsCopy);\n    };\n\n    const graphData = data\n        .map(({ place, isSouthernHemisphere, data: { yearData } }, index) => {\n            return {\n                name: place,\n                color: distinctColours[index] || getRandomColour(),\n                datapoints: yearData.map(({ date, snow }) => ({ x: convertDateToDayOfYear(date, isSouthernHemisphere), y: snow }))\n            }\n        });\n\n    const filteredData = () => {\n        return graphData.filter(({ name }) => show(name));\n    };\n\n\n    return <FlexBox>\n        <div style={{ flexGrow: 1 }}>\n            <InteractiveLegend series={filteredData()} monthDisplay='both' />\n        </div>\n        {graphData && <div style={{ minWidth: '300px' }}>\n            <FormLabel >Places</FormLabel>\n            <FormGroup label='Places' style={{ display: 'flex', flexFlow: 'column wrap', maxHeight: '680px', overflow: 'auto', alignContent: 'flex-start', width: '300px' }}>\n                {[...graphData].reverse().map(({ name }) => <ItemCheckbox value={name} selected={selected} handleCheckboxChange={handleCheckboxChange} key={name} />)}\n            </FormGroup>\n        </div>}\n    </FlexBox>;\n}\n\nconst ItemCheckbox = ({ selected, handleCheckboxChange, value }) => {\n    return <FormControlLabel\n        control={<Checkbox\n            checked={selected[value]}\n            onChange={handleCheckboxChange}\n            name={value}\n            style={{ color: 'black' }}\n        />}\n        label={value}\n    />\n}\n","import React, { useEffect } from 'react';\nimport { api } from './api';\nimport { Error } from './Error';\nimport { Loading } from './Loading';\nimport { YearGraph } from './YearGraph';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\n\nexport const PlacesComparer = () => {\n\n    const [data, setData] = React.useState(undefined);\n    const [error, setError] = React.useState(false);\n    const [selectedYear, setYear] = React.useState('2018');\n\n    useEffect(() => {\n        api.getSnowDepth().then(\n            setData,\n            () => setError(true)\n        );\n    }, []);\n\n    const oneYearData = data && data.map(({ data, place, isSouthernHemisphere }) => {\n        return {\n            data: data.find(({ year }) => year === selectedYear),\n            place,\n            isSouthernHemisphere,\n        }\n    });\n\n    return <>\n        {error && <Error />}\n        {oneYearData ?\n            <>\n                <h2>Snow Depth</h2>\n                <YearSelector year={selectedYear} setYear={setYear} data={data} />\n                <YearGraph data={oneYearData} />\n            </>\n            :\n            <Loading />\n        }\n    </>;\n\n};\n\nconst YearSelector = ({ year, setYear, data }) => {\n    const possibleYears = getYearsWhereAtLeastTwoResortsHaveData(data);\n    return <FormControl style={{ width: '100px', paddingTop: '15px 0px 20px' }}>\n        <Select value={year} onChange={(e) => setYear(e.target.value)}>\n            {possibleYears.map((year) => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n        </Select>\n    </FormControl>\n};\n\nconst getYearsWhereAtLeastTwoResortsHaveData = (data) => {\n    const yearsWithAnyData = {};\n    const yearsWithAtLeastTwoResorts = {};\n    data.forEach(({ data: placeData }) =>\n        placeData.forEach(({ year }) => {\n            if (yearsWithAtLeastTwoResorts[year]) {\n                return;\n            } else if (yearsWithAnyData[year]) {\n                yearsWithAtLeastTwoResorts[year] = true;\n            } else {\n                yearsWithAnyData[year] = true;\n            }\n        })\n    );\n    return Object.keys(yearsWithAtLeastTwoResorts);\n};","import React, { useState } from 'react';\nimport { AppWrapper, Body, Header, Logo } from './App.styled';\nimport { FormatSelector } from './FormatSelector';\nimport { YearsComparer } from './YearsComparer';\nimport { PlacesComparer } from './PlacesComparer';\nimport './App.css';\n\nfunction App() {\n\n    const [format, setFormat] = useState('years');\n\n    const handleChangeFormat = (event) => {\n        setFormat(event.target.value);\n    };\n\n    return <>\n        <AppWrapper>\n            <Header>\n                <Logo src={`${process.env.PUBLIC_URL}/logo.png`} alt='logo'style={{ }}/>\n            </Header>\n            <Body>\n                <FormatSelector format={format} handleChange={handleChangeFormat} />\n                {format === 'years' ? <YearsComparer /> : <PlacesComparer />}\n            </Body>\n        </AppWrapper>\n    </>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}